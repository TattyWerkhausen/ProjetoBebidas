// <auto-generated />
using System;
using EntregaBebida.Repository.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntregaBebida.Repository.Migrations
{
    [DbContext(typeof(EntregaBebidaDb))]
    [Migration("20210928234144_mgMG")]
    partial class mgMG
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("EntregaBebida.Domain.Model.Bebidas.Bebida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<double>("ValorCusto")
                        .HasColumnType("REAL");

                    b.Property<double>("ValorVenda")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Bebidas");
                });

            modelBuilder.Entity("EntregaBebida.Domain.Model.Clientes.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EntregaBebida.Domain.Model.Pedidos.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("EntregaBebida.Domain.Model.Pedidos.PedidoBebida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdBebida")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdPedido")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdBebida");

                    b.HasIndex("IdPedido");

                    b.ToTable("PedidosBebidas");
                });

            modelBuilder.Entity("EntregaBebida.Domain.Model.Pedidos.Pedido", b =>
                {
                    b.HasOne("EntregaBebida.Domain.Model.Clientes.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("EntregaBebida.Domain.Model.Pedidos.PedidoBebida", b =>
                {
                    b.HasOne("EntregaBebida.Domain.Model.Bebidas.Bebida", "Bebida")
                        .WithMany("PedidosBebidas")
                        .HasForeignKey("IdBebida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntregaBebida.Domain.Model.Pedidos.Pedido", "Pedido")
                        .WithMany("PedidosBebidas")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bebida");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("EntregaBebida.Domain.Model.Bebidas.Bebida", b =>
                {
                    b.Navigation("PedidosBebidas");
                });

            modelBuilder.Entity("EntregaBebida.Domain.Model.Clientes.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("EntregaBebida.Domain.Model.Pedidos.Pedido", b =>
                {
                    b.Navigation("PedidosBebidas");
                });
#pragma warning restore 612, 618
        }
    }
}
